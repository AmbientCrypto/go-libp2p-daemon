// Code generated by protoc-gen-go. DO NOT EDIT.
// source: p2pd.proto

package p2pd_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request_Type int32

const (
	Request_IDENTIFY       Request_Type = 0
	Request_CONNECT        Request_Type = 1
	Request_STREAM_OPEN    Request_Type = 2
	Request_STREAM_HANDLER Request_Type = 3
	Request_DHT            Request_Type = 4
	Request_LIST_PEERS     Request_Type = 5
	Request_CONNMANAGER    Request_Type = 6
	Request_DISCONNECT     Request_Type = 7
	Request_PUBSUB         Request_Type = 8
)

var Request_Type_name = map[int32]string{
	0: "IDENTIFY",
	1: "CONNECT",
	2: "STREAM_OPEN",
	3: "STREAM_HANDLER",
	4: "DHT",
	5: "LIST_PEERS",
	6: "CONNMANAGER",
	7: "DISCONNECT",
	8: "PUBSUB",
}

var Request_Type_value = map[string]int32{
	"IDENTIFY":       0,
	"CONNECT":        1,
	"STREAM_OPEN":    2,
	"STREAM_HANDLER": 3,
	"DHT":            4,
	"LIST_PEERS":     5,
	"CONNMANAGER":    6,
	"DISCONNECT":     7,
	"PUBSUB":         8,
}

func (x Request_Type) Enum() *Request_Type {
	p := new(Request_Type)
	*p = x
	return p
}

func (x Request_Type) String() string {
	return proto.EnumName(Request_Type_name, int32(x))
}

func (x *Request_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Request_Type_value, data, "Request_Type")
	if err != nil {
		return err
	}
	*x = Request_Type(value)
	return nil
}

func (Request_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{0, 0}
}

type Response_Type int32

const (
	Response_OK    Response_Type = 0
	Response_ERROR Response_Type = 1
)

var Response_Type_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}

var Response_Type_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Response_Type) Enum() *Response_Type {
	p := new(Response_Type)
	*p = x
	return p
}

func (x Response_Type) String() string {
	return proto.EnumName(Response_Type_name, int32(x))
}

func (x *Response_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Response_Type_value, data, "Response_Type")
	if err != nil {
		return err
	}
	*x = Response_Type(value)
	return nil
}

func (Response_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{1, 0}
}

type DHTRequest_Type int32

const (
	DHTRequest_FIND_PEER                    DHTRequest_Type = 0
	DHTRequest_FIND_PEERS_CONNECTED_TO_PEER DHTRequest_Type = 1
	DHTRequest_FIND_PROVIDERS               DHTRequest_Type = 2
	DHTRequest_GET_CLOSEST_PEERS            DHTRequest_Type = 3
	DHTRequest_GET_PUBLIC_KEY               DHTRequest_Type = 4
	DHTRequest_GET_VALUE                    DHTRequest_Type = 5
	DHTRequest_SEARCH_VALUE                 DHTRequest_Type = 6
	DHTRequest_PUT_VALUE                    DHTRequest_Type = 7
	DHTRequest_PROVIDE                      DHTRequest_Type = 8
)

var DHTRequest_Type_name = map[int32]string{
	0: "FIND_PEER",
	1: "FIND_PEERS_CONNECTED_TO_PEER",
	2: "FIND_PROVIDERS",
	3: "GET_CLOSEST_PEERS",
	4: "GET_PUBLIC_KEY",
	5: "GET_VALUE",
	6: "SEARCH_VALUE",
	7: "PUT_VALUE",
	8: "PROVIDE",
}

var DHTRequest_Type_value = map[string]int32{
	"FIND_PEER":                    0,
	"FIND_PEERS_CONNECTED_TO_PEER": 1,
	"FIND_PROVIDERS":               2,
	"GET_CLOSEST_PEERS":            3,
	"GET_PUBLIC_KEY":               4,
	"GET_VALUE":                    5,
	"SEARCH_VALUE":                 6,
	"PUT_VALUE":                    7,
	"PROVIDE":                      8,
}

func (x DHTRequest_Type) Enum() *DHTRequest_Type {
	p := new(DHTRequest_Type)
	*p = x
	return p
}

func (x DHTRequest_Type) String() string {
	return proto.EnumName(DHTRequest_Type_name, int32(x))
}

func (x *DHTRequest_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DHTRequest_Type_value, data, "DHTRequest_Type")
	if err != nil {
		return err
	}
	*x = DHTRequest_Type(value)
	return nil
}

func (DHTRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{8, 0}
}

type DHTResponse_Type int32

const (
	DHTResponse_BEGIN DHTResponse_Type = 0
	DHTResponse_VALUE DHTResponse_Type = 1
	DHTResponse_END   DHTResponse_Type = 2
)

var DHTResponse_Type_name = map[int32]string{
	0: "BEGIN",
	1: "VALUE",
	2: "END",
}

var DHTResponse_Type_value = map[string]int32{
	"BEGIN": 0,
	"VALUE": 1,
	"END":   2,
}

func (x DHTResponse_Type) Enum() *DHTResponse_Type {
	p := new(DHTResponse_Type)
	*p = x
	return p
}

func (x DHTResponse_Type) String() string {
	return proto.EnumName(DHTResponse_Type_name, int32(x))
}

func (x *DHTResponse_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DHTResponse_Type_value, data, "DHTResponse_Type")
	if err != nil {
		return err
	}
	*x = DHTResponse_Type(value)
	return nil
}

func (DHTResponse_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{9, 0}
}

type ConnManagerRequest_Type int32

const (
	ConnManagerRequest_TAG_PEER   ConnManagerRequest_Type = 0
	ConnManagerRequest_UNTAG_PEER ConnManagerRequest_Type = 1
	ConnManagerRequest_TRIM       ConnManagerRequest_Type = 2
)

var ConnManagerRequest_Type_name = map[int32]string{
	0: "TAG_PEER",
	1: "UNTAG_PEER",
	2: "TRIM",
}

var ConnManagerRequest_Type_value = map[string]int32{
	"TAG_PEER":   0,
	"UNTAG_PEER": 1,
	"TRIM":       2,
}

func (x ConnManagerRequest_Type) Enum() *ConnManagerRequest_Type {
	p := new(ConnManagerRequest_Type)
	*p = x
	return p
}

func (x ConnManagerRequest_Type) String() string {
	return proto.EnumName(ConnManagerRequest_Type_name, int32(x))
}

func (x *ConnManagerRequest_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConnManagerRequest_Type_value, data, "ConnManagerRequest_Type")
	if err != nil {
		return err
	}
	*x = ConnManagerRequest_Type(value)
	return nil
}

func (ConnManagerRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{11, 0}
}

type PSRequest_Type int32

const (
	PSRequest_GET_TOPICS PSRequest_Type = 0
	PSRequest_LIST_PEERS PSRequest_Type = 1
	PSRequest_PUBLISH    PSRequest_Type = 2
	PSRequest_SUBSCRIBE  PSRequest_Type = 3
)

var PSRequest_Type_name = map[int32]string{
	0: "GET_TOPICS",
	1: "LIST_PEERS",
	2: "PUBLISH",
	3: "SUBSCRIBE",
}

var PSRequest_Type_value = map[string]int32{
	"GET_TOPICS": 0,
	"LIST_PEERS": 1,
	"PUBLISH":    2,
	"SUBSCRIBE":  3,
}

func (x PSRequest_Type) Enum() *PSRequest_Type {
	p := new(PSRequest_Type)
	*p = x
	return p
}

func (x PSRequest_Type) String() string {
	return proto.EnumName(PSRequest_Type_name, int32(x))
}

func (x *PSRequest_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PSRequest_Type_value, data, "PSRequest_Type")
	if err != nil {
		return err
	}
	*x = PSRequest_Type(value)
	return nil
}

func (PSRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{13, 0}
}

type Request struct {
	Type                 *Request_Type         `protobuf:"varint,1,req,name=type,enum=p2pd.pb.Request_Type" json:"type,omitempty"`
	Connect              *ConnectRequest       `protobuf:"bytes,2,opt,name=connect" json:"connect,omitempty"`
	StreamOpen           *StreamOpenRequest    `protobuf:"bytes,3,opt,name=streamOpen" json:"streamOpen,omitempty"`
	StreamHandler        *StreamHandlerRequest `protobuf:"bytes,4,opt,name=streamHandler" json:"streamHandler,omitempty"`
	Dht                  *DHTRequest           `protobuf:"bytes,5,opt,name=dht" json:"dht,omitempty"`
	ConnManager          *ConnManagerRequest   `protobuf:"bytes,6,opt,name=connManager" json:"connManager,omitempty"`
	Disconnect           *DisconnectRequest    `protobuf:"bytes,7,opt,name=disconnect" json:"disconnect,omitempty"`
	Pubsub               *PSRequest            `protobuf:"bytes,8,opt,name=pubsub" json:"pubsub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetType() Request_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Request_IDENTIFY
}

func (m *Request) GetConnect() *ConnectRequest {
	if m != nil {
		return m.Connect
	}
	return nil
}

func (m *Request) GetStreamOpen() *StreamOpenRequest {
	if m != nil {
		return m.StreamOpen
	}
	return nil
}

func (m *Request) GetStreamHandler() *StreamHandlerRequest {
	if m != nil {
		return m.StreamHandler
	}
	return nil
}

func (m *Request) GetDht() *DHTRequest {
	if m != nil {
		return m.Dht
	}
	return nil
}

func (m *Request) GetConnManager() *ConnManagerRequest {
	if m != nil {
		return m.ConnManager
	}
	return nil
}

func (m *Request) GetDisconnect() *DisconnectRequest {
	if m != nil {
		return m.Disconnect
	}
	return nil
}

func (m *Request) GetPubsub() *PSRequest {
	if m != nil {
		return m.Pubsub
	}
	return nil
}

type Response struct {
	Type                 *Response_Type    `protobuf:"varint,1,req,name=type,enum=p2pd.pb.Response_Type" json:"type,omitempty"`
	Error                *ErrorResponse    `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	StreamInfo           *StreamInfo       `protobuf:"bytes,3,opt,name=streamInfo" json:"streamInfo,omitempty"`
	Identify             *IdentifyResponse `protobuf:"bytes,4,opt,name=identify" json:"identify,omitempty"`
	Dht                  *DHTResponse      `protobuf:"bytes,5,opt,name=dht" json:"dht,omitempty"`
	Peers                []*PeerInfo       `protobuf:"bytes,6,rep,name=peers" json:"peers,omitempty"`
	Pubsub               *PSResponse       `protobuf:"bytes,7,opt,name=pubsub" json:"pubsub,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetType() Response_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Response_OK
}

func (m *Response) GetError() *ErrorResponse {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetStreamInfo() *StreamInfo {
	if m != nil {
		return m.StreamInfo
	}
	return nil
}

func (m *Response) GetIdentify() *IdentifyResponse {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *Response) GetDht() *DHTResponse {
	if m != nil {
		return m.Dht
	}
	return nil
}

func (m *Response) GetPeers() []*PeerInfo {
	if m != nil {
		return m.Peers
	}
	return nil
}

func (m *Response) GetPubsub() *PSResponse {
	if m != nil {
		return m.Pubsub
	}
	return nil
}

type IdentifyResponse struct {
	Id                   []byte   `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Addrs                [][]byte `protobuf:"bytes,2,rep,name=addrs" json:"addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentifyResponse) Reset()         { *m = IdentifyResponse{} }
func (m *IdentifyResponse) String() string { return proto.CompactTextString(m) }
func (*IdentifyResponse) ProtoMessage()    {}
func (*IdentifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{2}
}

func (m *IdentifyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentifyResponse.Unmarshal(m, b)
}
func (m *IdentifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentifyResponse.Marshal(b, m, deterministic)
}
func (m *IdentifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentifyResponse.Merge(m, src)
}
func (m *IdentifyResponse) XXX_Size() int {
	return xxx_messageInfo_IdentifyResponse.Size(m)
}
func (m *IdentifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IdentifyResponse proto.InternalMessageInfo

func (m *IdentifyResponse) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IdentifyResponse) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

type ConnectRequest struct {
	Peer                 []byte   `protobuf:"bytes,1,req,name=peer" json:"peer,omitempty"`
	Addrs                [][]byte `protobuf:"bytes,2,rep,name=addrs" json:"addrs,omitempty"`
	Timeout              *int64   `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectRequest) Reset()         { *m = ConnectRequest{} }
func (m *ConnectRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectRequest) ProtoMessage()    {}
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{3}
}

func (m *ConnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectRequest.Unmarshal(m, b)
}
func (m *ConnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectRequest.Marshal(b, m, deterministic)
}
func (m *ConnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectRequest.Merge(m, src)
}
func (m *ConnectRequest) XXX_Size() int {
	return xxx_messageInfo_ConnectRequest.Size(m)
}
func (m *ConnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectRequest proto.InternalMessageInfo

func (m *ConnectRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ConnectRequest) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

func (m *ConnectRequest) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type StreamOpenRequest struct {
	Peer                 []byte   `protobuf:"bytes,1,req,name=peer" json:"peer,omitempty"`
	Proto                []string `protobuf:"bytes,2,rep,name=proto" json:"proto,omitempty"`
	Timeout              *int64   `protobuf:"varint,3,opt,name=timeout" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamOpenRequest) Reset()         { *m = StreamOpenRequest{} }
func (m *StreamOpenRequest) String() string { return proto.CompactTextString(m) }
func (*StreamOpenRequest) ProtoMessage()    {}
func (*StreamOpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{4}
}

func (m *StreamOpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamOpenRequest.Unmarshal(m, b)
}
func (m *StreamOpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamOpenRequest.Marshal(b, m, deterministic)
}
func (m *StreamOpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamOpenRequest.Merge(m, src)
}
func (m *StreamOpenRequest) XXX_Size() int {
	return xxx_messageInfo_StreamOpenRequest.Size(m)
}
func (m *StreamOpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamOpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamOpenRequest proto.InternalMessageInfo

func (m *StreamOpenRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *StreamOpenRequest) GetProto() []string {
	if m != nil {
		return m.Proto
	}
	return nil
}

func (m *StreamOpenRequest) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type StreamHandlerRequest struct {
	Addr                 []byte   `protobuf:"bytes,1,req,name=addr" json:"addr,omitempty"`
	Proto                []string `protobuf:"bytes,2,rep,name=proto" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamHandlerRequest) Reset()         { *m = StreamHandlerRequest{} }
func (m *StreamHandlerRequest) String() string { return proto.CompactTextString(m) }
func (*StreamHandlerRequest) ProtoMessage()    {}
func (*StreamHandlerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{5}
}

func (m *StreamHandlerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamHandlerRequest.Unmarshal(m, b)
}
func (m *StreamHandlerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamHandlerRequest.Marshal(b, m, deterministic)
}
func (m *StreamHandlerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamHandlerRequest.Merge(m, src)
}
func (m *StreamHandlerRequest) XXX_Size() int {
	return xxx_messageInfo_StreamHandlerRequest.Size(m)
}
func (m *StreamHandlerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamHandlerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamHandlerRequest proto.InternalMessageInfo

func (m *StreamHandlerRequest) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *StreamHandlerRequest) GetProto() []string {
	if m != nil {
		return m.Proto
	}
	return nil
}

type ErrorResponse struct {
	Msg                  *string  `protobuf:"bytes,1,req,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{6}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

type StreamInfo struct {
	Peer                 []byte   `protobuf:"bytes,1,req,name=peer" json:"peer,omitempty"`
	Addr                 []byte   `protobuf:"bytes,2,req,name=addr" json:"addr,omitempty"`
	Proto                *string  `protobuf:"bytes,3,req,name=proto" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInfo) Reset()         { *m = StreamInfo{} }
func (m *StreamInfo) String() string { return proto.CompactTextString(m) }
func (*StreamInfo) ProtoMessage()    {}
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{7}
}

func (m *StreamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInfo.Unmarshal(m, b)
}
func (m *StreamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInfo.Marshal(b, m, deterministic)
}
func (m *StreamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInfo.Merge(m, src)
}
func (m *StreamInfo) XXX_Size() int {
	return xxx_messageInfo_StreamInfo.Size(m)
}
func (m *StreamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInfo proto.InternalMessageInfo

func (m *StreamInfo) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *StreamInfo) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *StreamInfo) GetProto() string {
	if m != nil && m.Proto != nil {
		return *m.Proto
	}
	return ""
}

type DHTRequest struct {
	Type                 *DHTRequest_Type `protobuf:"varint,1,req,name=type,enum=p2pd.pb.DHTRequest_Type" json:"type,omitempty"`
	Peer                 []byte           `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	Cid                  []byte           `protobuf:"bytes,3,opt,name=cid" json:"cid,omitempty"`
	Key                  []byte           `protobuf:"bytes,4,opt,name=key" json:"key,omitempty"`
	Value                []byte           `protobuf:"bytes,5,opt,name=value" json:"value,omitempty"`
	Count                *int32           `protobuf:"varint,6,opt,name=count" json:"count,omitempty"`
	Timeout              *int64           `protobuf:"varint,7,opt,name=timeout" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DHTRequest) Reset()         { *m = DHTRequest{} }
func (m *DHTRequest) String() string { return proto.CompactTextString(m) }
func (*DHTRequest) ProtoMessage()    {}
func (*DHTRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{8}
}

func (m *DHTRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHTRequest.Unmarshal(m, b)
}
func (m *DHTRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHTRequest.Marshal(b, m, deterministic)
}
func (m *DHTRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHTRequest.Merge(m, src)
}
func (m *DHTRequest) XXX_Size() int {
	return xxx_messageInfo_DHTRequest.Size(m)
}
func (m *DHTRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DHTRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DHTRequest proto.InternalMessageInfo

func (m *DHTRequest) GetType() DHTRequest_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DHTRequest_FIND_PEER
}

func (m *DHTRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *DHTRequest) GetCid() []byte {
	if m != nil {
		return m.Cid
	}
	return nil
}

func (m *DHTRequest) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *DHTRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DHTRequest) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *DHTRequest) GetTimeout() int64 {
	if m != nil && m.Timeout != nil {
		return *m.Timeout
	}
	return 0
}

type DHTResponse struct {
	Type                 *DHTResponse_Type `protobuf:"varint,1,req,name=type,enum=p2pd.pb.DHTResponse_Type" json:"type,omitempty"`
	Peer                 *PeerInfo         `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	Value                []byte            `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DHTResponse) Reset()         { *m = DHTResponse{} }
func (m *DHTResponse) String() string { return proto.CompactTextString(m) }
func (*DHTResponse) ProtoMessage()    {}
func (*DHTResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{9}
}

func (m *DHTResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHTResponse.Unmarshal(m, b)
}
func (m *DHTResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHTResponse.Marshal(b, m, deterministic)
}
func (m *DHTResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHTResponse.Merge(m, src)
}
func (m *DHTResponse) XXX_Size() int {
	return xxx_messageInfo_DHTResponse.Size(m)
}
func (m *DHTResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DHTResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DHTResponse proto.InternalMessageInfo

func (m *DHTResponse) GetType() DHTResponse_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return DHTResponse_BEGIN
}

func (m *DHTResponse) GetPeer() *PeerInfo {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *DHTResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type PeerInfo struct {
	Id                   []byte   `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Addrs                [][]byte `protobuf:"bytes,2,rep,name=addrs" json:"addrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerInfo) Reset()         { *m = PeerInfo{} }
func (m *PeerInfo) String() string { return proto.CompactTextString(m) }
func (*PeerInfo) ProtoMessage()    {}
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{10}
}

func (m *PeerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerInfo.Unmarshal(m, b)
}
func (m *PeerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerInfo.Marshal(b, m, deterministic)
}
func (m *PeerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerInfo.Merge(m, src)
}
func (m *PeerInfo) XXX_Size() int {
	return xxx_messageInfo_PeerInfo.Size(m)
}
func (m *PeerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PeerInfo proto.InternalMessageInfo

func (m *PeerInfo) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PeerInfo) GetAddrs() [][]byte {
	if m != nil {
		return m.Addrs
	}
	return nil
}

type ConnManagerRequest struct {
	Type                 *ConnManagerRequest_Type `protobuf:"varint,1,req,name=type,enum=p2pd.pb.ConnManagerRequest_Type" json:"type,omitempty"`
	Peer                 []byte                   `protobuf:"bytes,2,opt,name=peer" json:"peer,omitempty"`
	Tag                  *string                  `protobuf:"bytes,3,opt,name=tag" json:"tag,omitempty"`
	Weight               *int64                   `protobuf:"varint,4,opt,name=weight" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ConnManagerRequest) Reset()         { *m = ConnManagerRequest{} }
func (m *ConnManagerRequest) String() string { return proto.CompactTextString(m) }
func (*ConnManagerRequest) ProtoMessage()    {}
func (*ConnManagerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{11}
}

func (m *ConnManagerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnManagerRequest.Unmarshal(m, b)
}
func (m *ConnManagerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnManagerRequest.Marshal(b, m, deterministic)
}
func (m *ConnManagerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnManagerRequest.Merge(m, src)
}
func (m *ConnManagerRequest) XXX_Size() int {
	return xxx_messageInfo_ConnManagerRequest.Size(m)
}
func (m *ConnManagerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnManagerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConnManagerRequest proto.InternalMessageInfo

func (m *ConnManagerRequest) GetType() ConnManagerRequest_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ConnManagerRequest_TAG_PEER
}

func (m *ConnManagerRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

func (m *ConnManagerRequest) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *ConnManagerRequest) GetWeight() int64 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

type DisconnectRequest struct {
	Peer                 []byte   `protobuf:"bytes,1,req,name=peer" json:"peer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisconnectRequest) Reset()         { *m = DisconnectRequest{} }
func (m *DisconnectRequest) String() string { return proto.CompactTextString(m) }
func (*DisconnectRequest) ProtoMessage()    {}
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{12}
}

func (m *DisconnectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisconnectRequest.Unmarshal(m, b)
}
func (m *DisconnectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisconnectRequest.Marshal(b, m, deterministic)
}
func (m *DisconnectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisconnectRequest.Merge(m, src)
}
func (m *DisconnectRequest) XXX_Size() int {
	return xxx_messageInfo_DisconnectRequest.Size(m)
}
func (m *DisconnectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisconnectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisconnectRequest proto.InternalMessageInfo

func (m *DisconnectRequest) GetPeer() []byte {
	if m != nil {
		return m.Peer
	}
	return nil
}

type PSRequest struct {
	Type                 *PSRequest_Type `protobuf:"varint,1,req,name=type,enum=p2pd.pb.PSRequest_Type" json:"type,omitempty"`
	Topic                *string         `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Data                 []byte          `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PSRequest) Reset()         { *m = PSRequest{} }
func (m *PSRequest) String() string { return proto.CompactTextString(m) }
func (*PSRequest) ProtoMessage()    {}
func (*PSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{13}
}

func (m *PSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSRequest.Unmarshal(m, b)
}
func (m *PSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSRequest.Marshal(b, m, deterministic)
}
func (m *PSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSRequest.Merge(m, src)
}
func (m *PSRequest) XXX_Size() int {
	return xxx_messageInfo_PSRequest.Size(m)
}
func (m *PSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PSRequest proto.InternalMessageInfo

func (m *PSRequest) GetType() PSRequest_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return PSRequest_GET_TOPICS
}

func (m *PSRequest) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *PSRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PSMessage struct {
	From                 []byte   `protobuf:"bytes,1,opt,name=from" json:"from,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	Seqno                []byte   `protobuf:"bytes,3,opt,name=seqno" json:"seqno,omitempty"`
	TopicIDs             []string `protobuf:"bytes,4,rep,name=topicIDs" json:"topicIDs,omitempty"`
	Signature            []byte   `protobuf:"bytes,5,opt,name=signature" json:"signature,omitempty"`
	Key                  []byte   `protobuf:"bytes,6,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PSMessage) Reset()         { *m = PSMessage{} }
func (m *PSMessage) String() string { return proto.CompactTextString(m) }
func (*PSMessage) ProtoMessage()    {}
func (*PSMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{14}
}

func (m *PSMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSMessage.Unmarshal(m, b)
}
func (m *PSMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSMessage.Marshal(b, m, deterministic)
}
func (m *PSMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSMessage.Merge(m, src)
}
func (m *PSMessage) XXX_Size() int {
	return xxx_messageInfo_PSMessage.Size(m)
}
func (m *PSMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PSMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PSMessage proto.InternalMessageInfo

func (m *PSMessage) GetFrom() []byte {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *PSMessage) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PSMessage) GetSeqno() []byte {
	if m != nil {
		return m.Seqno
	}
	return nil
}

func (m *PSMessage) GetTopicIDs() []string {
	if m != nil {
		return m.TopicIDs
	}
	return nil
}

func (m *PSMessage) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *PSMessage) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

type PSResponse struct {
	Topics               []string `protobuf:"bytes,1,rep,name=topics" json:"topics,omitempty"`
	PeerIDs              [][]byte `protobuf:"bytes,2,rep,name=peerIDs" json:"peerIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PSResponse) Reset()         { *m = PSResponse{} }
func (m *PSResponse) String() string { return proto.CompactTextString(m) }
func (*PSResponse) ProtoMessage()    {}
func (*PSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7333f0e9b622f7df, []int{15}
}

func (m *PSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSResponse.Unmarshal(m, b)
}
func (m *PSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSResponse.Marshal(b, m, deterministic)
}
func (m *PSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSResponse.Merge(m, src)
}
func (m *PSResponse) XXX_Size() int {
	return xxx_messageInfo_PSResponse.Size(m)
}
func (m *PSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PSResponse proto.InternalMessageInfo

func (m *PSResponse) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PSResponse) GetPeerIDs() [][]byte {
	if m != nil {
		return m.PeerIDs
	}
	return nil
}

func init() {
	proto.RegisterEnum("p2pd.pb.Request_Type", Request_Type_name, Request_Type_value)
	proto.RegisterEnum("p2pd.pb.Response_Type", Response_Type_name, Response_Type_value)
	proto.RegisterEnum("p2pd.pb.DHTRequest_Type", DHTRequest_Type_name, DHTRequest_Type_value)
	proto.RegisterEnum("p2pd.pb.DHTResponse_Type", DHTResponse_Type_name, DHTResponse_Type_value)
	proto.RegisterEnum("p2pd.pb.ConnManagerRequest_Type", ConnManagerRequest_Type_name, ConnManagerRequest_Type_value)
	proto.RegisterEnum("p2pd.pb.PSRequest_Type", PSRequest_Type_name, PSRequest_Type_value)
	proto.RegisterType((*Request)(nil), "p2pd.pb.Request")
	proto.RegisterType((*Response)(nil), "p2pd.pb.Response")
	proto.RegisterType((*IdentifyResponse)(nil), "p2pd.pb.IdentifyResponse")
	proto.RegisterType((*ConnectRequest)(nil), "p2pd.pb.ConnectRequest")
	proto.RegisterType((*StreamOpenRequest)(nil), "p2pd.pb.StreamOpenRequest")
	proto.RegisterType((*StreamHandlerRequest)(nil), "p2pd.pb.StreamHandlerRequest")
	proto.RegisterType((*ErrorResponse)(nil), "p2pd.pb.ErrorResponse")
	proto.RegisterType((*StreamInfo)(nil), "p2pd.pb.StreamInfo")
	proto.RegisterType((*DHTRequest)(nil), "p2pd.pb.DHTRequest")
	proto.RegisterType((*DHTResponse)(nil), "p2pd.pb.DHTResponse")
	proto.RegisterType((*PeerInfo)(nil), "p2pd.pb.PeerInfo")
	proto.RegisterType((*ConnManagerRequest)(nil), "p2pd.pb.ConnManagerRequest")
	proto.RegisterType((*DisconnectRequest)(nil), "p2pd.pb.DisconnectRequest")
	proto.RegisterType((*PSRequest)(nil), "p2pd.pb.PSRequest")
	proto.RegisterType((*PSMessage)(nil), "p2pd.pb.PSMessage")
	proto.RegisterType((*PSResponse)(nil), "p2pd.pb.PSResponse")
}

func init() { proto.RegisterFile("p2pd.proto", fileDescriptor_7333f0e9b622f7df) }

var fileDescriptor_7333f0e9b622f7df = []byte{
	// 1103 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xc1, 0x6e, 0xdb, 0x46,
	0x10, 0x35, 0x49, 0x49, 0x94, 0x46, 0xb2, 0xba, 0xde, 0x38, 0x09, 0x9d, 0xa6, 0x80, 0x4a, 0xc0,
	0x8d, 0x9b, 0xa4, 0x46, 0xeb, 0xb6, 0x40, 0x51, 0xa0, 0x45, 0x25, 0x91, 0xb1, 0xd8, 0xd8, 0x92,
	0xb0, 0xa4, 0x52, 0xe4, 0x24, 0xd0, 0xe6, 0x5a, 0x11, 0x1a, 0x93, 0x0c, 0x49, 0xb5, 0xf0, 0x3f,
	0xf4, 0xda, 0x7b, 0x4f, 0xfd, 0x81, 0x5e, 0xfa, 0x03, 0xfd, 0x98, 0x5e, 0xfa, 0x0d, 0xc5, 0x2e,
	0x77, 0x29, 0x52, 0x56, 0x82, 0xdc, 0x76, 0x76, 0xdf, 0x9b, 0x99, 0x9d, 0x7d, 0x33, 0x0b, 0x10,
	0x9f, 0xc4, 0xc1, 0x71, 0x9c, 0x44, 0x59, 0x84, 0xf5, 0x7c, 0x7d, 0x61, 0xfe, 0x53, 0x03, 0x9d,
	0xd0, 0x37, 0x2b, 0x9a, 0x66, 0xf8, 0x53, 0xa8, 0x65, 0x37, 0x31, 0x35, 0x94, 0x9e, 0x7a, 0xd4,
	0x3d, 0xb9, 0x7b, 0x2c, 0x30, 0xc7, 0xe2, 0xfc, 0xd8, 0xbb, 0x89, 0x29, 0xe1, 0x10, 0xfc, 0x05,
	0xe8, 0x97, 0x51, 0x18, 0xd2, 0xcb, 0xcc, 0x50, 0x7b, 0xca, 0x51, 0xfb, 0xe4, 0x7e, 0x81, 0x1e,
	0xe6, 0xfb, 0x82, 0x44, 0x24, 0x0e, 0x7f, 0x0b, 0x90, 0x66, 0x09, 0xf5, 0xaf, 0x27, 0x31, 0x0d,
	0x0d, 0x8d, 0xb3, 0x1e, 0x14, 0x2c, 0xb7, 0x38, 0x92, 0xc4, 0x12, 0x1a, 0x0f, 0x61, 0x37, 0xb7,
	0x46, 0x7e, 0x18, 0xbc, 0xa6, 0x89, 0x51, 0xe3, 0xf4, 0x8f, 0x36, 0xe8, 0xe2, 0x54, 0x7a, 0xa8,
	0x72, 0xf0, 0x21, 0x68, 0xc1, 0xab, 0xcc, 0xa8, 0x73, 0xea, 0x9d, 0x82, 0x6a, 0x8d, 0x3c, 0x49,
	0x60, 0xe7, 0xf8, 0x3b, 0x68, 0xb3, 0x94, 0xcf, 0xfd, 0xd0, 0x5f, 0xd0, 0xc4, 0x68, 0x70, 0xf8,
	0x87, 0x95, 0xeb, 0x89, 0x33, 0x49, 0x2b, 0xe3, 0xd9, 0x35, 0x83, 0x65, 0x2a, 0x8b, 0xa3, 0x6f,
	0x5c, 0xd3, 0x2a, 0x8e, 0x8a, 0x6b, 0xae, 0xd1, 0xf8, 0x31, 0x34, 0xe2, 0xd5, 0x45, 0xba, 0xba,
	0x30, 0x9a, 0x9c, 0x87, 0x0b, 0xde, 0xd4, 0x95, 0x78, 0x81, 0x30, 0x7f, 0x53, 0xa0, 0xc6, 0x1e,
	0x04, 0x77, 0xa0, 0xe9, 0x58, 0xf6, 0xd8, 0x73, 0x9e, 0xbd, 0x44, 0x3b, 0xb8, 0x0d, 0xfa, 0x70,
	0x32, 0x1e, 0xdb, 0x43, 0x0f, 0x29, 0xf8, 0x03, 0x68, 0xbb, 0x1e, 0xb1, 0xfb, 0xe7, 0xf3, 0xc9,
	0xd4, 0x1e, 0x23, 0x15, 0x63, 0xe8, 0x8a, 0x8d, 0x51, 0x7f, 0x6c, 0x9d, 0xd9, 0x04, 0x69, 0x58,
	0x07, 0xcd, 0x1a, 0x79, 0xa8, 0x86, 0xbb, 0x00, 0x67, 0x8e, 0xeb, 0xcd, 0xa7, 0xb6, 0x4d, 0x5c,
	0x54, 0x67, 0x6c, 0xe6, 0xea, 0xbc, 0x3f, 0xee, 0x9f, 0xda, 0x04, 0x35, 0x18, 0xc0, 0x72, 0x5c,
	0xe9, 0x5e, 0xc7, 0x00, 0x8d, 0xe9, 0x6c, 0xe0, 0xce, 0x06, 0xa8, 0x69, 0xfe, 0xab, 0x42, 0x93,
	0xd0, 0x34, 0x8e, 0xc2, 0x94, 0xe2, 0xc7, 0x15, 0x21, 0xdd, 0x2b, 0x09, 0x29, 0x07, 0x94, 0x95,
	0xf4, 0x14, 0xea, 0x34, 0x49, 0xa2, 0x44, 0xe8, 0x68, 0x0d, 0xb6, 0xd9, 0xae, 0x64, 0x90, 0x1c,
	0x84, 0xbf, 0x94, 0x22, 0x72, 0xc2, 0xab, 0x48, 0x88, 0xe8, 0xce, 0x86, 0x0a, 0xd8, 0x11, 0x29,
	0xc1, 0xf0, 0xd7, 0xd0, 0x5c, 0x06, 0x34, 0xcc, 0x96, 0x57, 0x37, 0x42, 0x38, 0x07, 0x05, 0xc5,
	0x11, 0x07, 0x45, 0xa0, 0x02, 0x8a, 0x3f, 0x29, 0xeb, 0x65, 0xbf, 0xaa, 0x17, 0x01, 0xe6, 0x82,
	0x79, 0x04, 0xf5, 0x98, 0xd2, 0x24, 0x35, 0x1a, 0x3d, 0xed, 0xa8, 0x7d, 0xb2, 0xb7, 0x7e, 0x34,
	0x4a, 0x13, 0x9e, 0x4c, 0x7e, 0x8e, 0x9f, 0x14, 0xcf, 0xab, 0x6f, 0x24, 0xce, 0x9e, 0x57, 0xb8,
	0x94, 0xef, 0x7b, 0x20, 0x9e, 0xb7, 0x01, 0xea, 0xe4, 0x39, 0xda, 0xc1, 0x2d, 0xa8, 0xdb, 0x84,
	0x4c, 0x08, 0x52, 0xcc, 0x6f, 0x00, 0x6d, 0xa6, 0x8d, 0xbb, 0xa0, 0x2e, 0x03, 0x5e, 0xf0, 0x0e,
	0x51, 0x97, 0x01, 0xde, 0x87, 0xba, 0x1f, 0x04, 0x49, 0x6a, 0xa8, 0x3d, 0xed, 0xa8, 0x43, 0x72,
	0xc3, 0xf4, 0xa0, 0x5b, 0x6d, 0x4f, 0x8c, 0xa1, 0xc6, 0x92, 0x13, 0x4c, 0xbe, 0xde, 0xce, 0xc5,
	0x06, 0xe8, 0xd9, 0xf2, 0x9a, 0x46, 0xab, 0x8c, 0xd7, 0x5d, 0x23, 0xd2, 0x34, 0x7f, 0x82, 0xbd,
	0x5b, 0xed, 0xfb, 0x36, 0xc7, 0x7c, 0xfc, 0x70, 0xc7, 0x2d, 0x92, 0x1b, 0xef, 0x70, 0xfc, 0x03,
	0xec, 0x6f, 0x6b, 0x6c, 0xe6, 0x9b, 0xe5, 0x24, 0x7d, 0xb3, 0xf5, 0x76, 0xdf, 0xe6, 0xc7, 0xb0,
	0x5b, 0xd1, 0x11, 0x46, 0xa0, 0x5d, 0xa7, 0x0b, 0xce, 0x6c, 0x11, 0xb6, 0x34, 0x7f, 0x04, 0x58,
	0xeb, 0x66, 0x6b, 0xda, 0x32, 0x9c, 0xba, 0x2d, 0x9c, 0xc6, 0x3d, 0x89, 0x70, 0xff, 0xa9, 0x00,
	0xeb, 0x79, 0x82, 0x9f, 0x56, 0xfa, 0xc0, 0xd8, 0x32, 0x72, 0xca, 0x9d, 0x20, 0x43, 0xb3, 0x46,
	0x90, 0xa1, 0x11, 0x68, 0x97, 0xcb, 0x80, 0xd7, 0xa5, 0x43, 0xd8, 0x92, 0xed, 0xfc, 0x4c, 0x73,
	0x1d, 0x77, 0x08, 0x5b, 0xb2, 0x54, 0x7e, 0xf1, 0x5f, 0xaf, 0x28, 0x57, 0x6a, 0x87, 0xe4, 0x06,
	0xdb, 0xbd, 0x8c, 0x56, 0x61, 0xc6, 0x07, 0x58, 0x9d, 0xe4, 0x46, 0xb9, 0xd6, 0x7a, 0xb5, 0xd6,
	0x7f, 0xc9, 0x79, 0xb2, 0x0b, 0xad, 0x67, 0xce, 0xd8, 0xe2, 0x63, 0x00, 0xed, 0xe0, 0x1e, 0x3c,
	0x2c, 0x4c, 0x77, 0x2e, 0x9a, 0xdf, 0xb6, 0xe6, 0xde, 0x24, 0x47, 0x28, 0x6c, 0xa8, 0xe4, 0x08,
	0x32, 0x79, 0xe1, 0x58, 0x6c, 0x76, 0xa8, 0xf8, 0x2e, 0xec, 0x9d, 0xda, 0xde, 0x7c, 0x78, 0x36,
	0x71, 0xed, 0x62, 0xa4, 0x68, 0x0c, 0xca, 0xb6, 0xa7, 0xb3, 0xc1, 0x99, 0x33, 0x9c, 0x3f, 0xb7,
	0x5f, 0xa2, 0x1a, 0x8b, 0xc7, 0xf6, 0x5e, 0xf4, 0xcf, 0x66, 0x36, 0xaa, 0x63, 0x04, 0x1d, 0xd7,
	0xee, 0x93, 0xe1, 0x48, 0xec, 0x34, 0x18, 0x60, 0x3a, 0x93, 0x00, 0x9d, 0x4d, 0x38, 0x11, 0x09,
	0x35, 0xcd, 0x3f, 0x14, 0x68, 0x97, 0x1a, 0x12, 0x7f, 0x56, 0xa9, 0xf8, 0xc1, 0xb6, 0xa6, 0x2d,
	0x97, 0xfc, 0xb0, 0x54, 0xf2, 0xad, 0x9d, 0x5b, 0xe8, 0x36, 0xaf, 0xb0, 0x56, 0xaa, 0xb0, 0x79,
	0x28, 0x0a, 0xd6, 0x82, 0xfa, 0xc0, 0x3e, 0x75, 0xc6, 0x79, 0x93, 0xe6, 0x69, 0x2a, 0x6c, 0xac,
	0xda, 0x63, 0x0b, 0xa9, 0xe6, 0xe7, 0xd0, 0x94, 0xee, 0xde, 0xb3, 0x4b, 0xff, 0x56, 0x00, 0xdf,
	0xfe, 0x66, 0xf0, 0x57, 0x95, 0xbb, 0xf5, 0xde, 0xf1, 0x23, 0xbd, 0x87, 0xaa, 0x32, 0x7f, 0xc1,
	0x6f, 0xd3, 0x22, 0x6c, 0x89, 0xef, 0x41, 0xe3, 0x57, 0xba, 0x5c, 0xbc, 0xca, 0xb8, 0xb0, 0x34,
	0x22, 0x2c, 0xf3, 0x78, 0xfd, 0xc9, 0x78, 0xfd, 0x53, 0xa9, 0x89, 0x2e, 0xc0, 0x6c, 0x5c, 0xd8,
	0x0a, 0x6e, 0x42, 0xcd, 0x23, 0xce, 0x39, 0x52, 0xcd, 0x47, 0xb0, 0x77, 0xeb, 0x8b, 0xdb, 0xd6,
	0x53, 0xe6, 0x9f, 0x0a, 0xb4, 0x8a, 0x4f, 0x0d, 0x3f, 0xa9, 0x5c, 0xed, 0xfe, 0xed, 0x6f, 0xaf,
	0x7c, 0xa3, 0x7d, 0xa8, 0x67, 0x51, 0xbc, 0xbc, 0xe4, 0x57, 0x6a, 0x91, 0xdc, 0x60, 0x41, 0x02,
	0x3f, 0xf3, 0xc5, 0x13, 0xf1, 0xb5, 0x39, 0x10, 0xd9, 0x77, 0x01, 0x98, 0xc4, 0xbc, 0xc9, 0xd4,
	0x19, 0xba, 0x79, 0xfe, 0xa5, 0x9f, 0x4e, 0xe1, 0x92, 0x62, 0x92, 0x74, 0x47, 0x48, 0x65, 0x72,
	0x73, 0x67, 0x03, 0x77, 0x48, 0x9c, 0x81, 0x8d, 0x34, 0xf3, 0x77, 0x9e, 0xe8, 0x39, 0x4d, 0x53,
	0x7f, 0xc1, 0xab, 0x79, 0x95, 0x44, 0xd7, 0x86, 0x92, 0x47, 0x61, 0xeb, 0x22, 0xb2, 0xba, 0x8e,
	0xcc, 0x72, 0x4c, 0xe9, 0x9b, 0x30, 0x92, 0x8a, 0xe1, 0x06, 0x7e, 0x00, 0x4d, 0x9e, 0xac, 0x63,
	0xa5, 0x46, 0x8d, 0x8f, 0xa9, 0xc2, 0xc6, 0x0f, 0xa1, 0x95, 0x2e, 0x17, 0xa1, 0x9f, 0xad, 0x12,
	0xd9, 0xc9, 0xeb, 0x0d, 0xd9, 0xf5, 0x8d, 0xa2, 0xeb, 0xcd, 0xef, 0x01, 0xd6, 0xbf, 0x06, 0x7b,
	0x3f, 0xee, 0x29, 0x35, 0x14, 0xee, 0x57, 0x58, 0xac, 0xdf, 0x59, 0xb9, 0x59, 0xc0, 0x5c, 0x62,
	0xd2, 0xfc, 0x3f, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x25, 0xb1, 0x35, 0x0e, 0x0a, 0x00, 0x00,
}
